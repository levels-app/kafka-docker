version: '3.4'
services:
  kafka:
    image: levels/kafka
    container_name: kafka
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      CLUSTER_UUID: 'agme9NUevkWpOAVzLIMxBw=='
      KAFKA_WITHOUT_ZOOKEEPER: "true"
      HOSTNAME_COMMAND: curl http://169.254.169.254/latest/meta-data/public-ipv4
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      # KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://:9093,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://:9093,PLAINTEXT_HOST://:9094
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092,PLAINTEXT_HOST://_{HOSTNAME_COMMAND}:9094'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://_{HOSTNAME_COMMAND}:9092,PLAINTEXT_HOST://_{HOSTNAME_COMMAND}:9094'
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1\@kafka:9093
    # healthcheck:
    #   test: [ "CMD", "nc", "-z", "localhost", "9092" ]
    #   start_period: 30s
  # schema-registry:
  #   image: confluentinc/cp-schema-registry:5.5.1
  #   container_name: schema-registry
  #   restart: unless-stopped
  #   depends_on:
  #     - kafka
  #   ports:
  #     - '8081:8081'
  #   environment:
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: host.docker.internal:9092
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
  #   healthcheck:
  #     test: 'curl -f http://localhost:8081 || exit 1'
  #     start_period: 1m